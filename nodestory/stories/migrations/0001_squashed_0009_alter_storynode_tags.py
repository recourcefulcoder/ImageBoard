# Generated by Django 5.1.3 on 2025-02-03 09:21

import ckeditor.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [
        ("stories", "0001_initial"),
        ("stories", "0002_remove_closuretable_ancestor_id_and_more"),
        ("stories", "0003_alter_closuretable_descendant"),
        ("stories", "0004_storynode_published_storyhead"),
        ("stories", "0005_storyhead_tags_alter_storyhead_title"),
        ("stories", "0006_alter_storynode_text"),
        ("stories", "0007_alter_storynode_tags"),
        ("stories", "0008_alter_storyhead_first_node"),
        ("stories", "0009_alter_storynode_tags"),
    ]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="StoryNode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("text", ckeditor.fields.RichTextField()),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("tags", models.ManyToManyField(to="stories.tag")),
                ("published", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="ClosureTable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("depth", models.SmallIntegerField()),
                (
                    "ancestor",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="stories.storynode",
                    ),
                ),
                (
                    "descendant",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parents",
                        to="stories.storynode",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StoryHead",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(default="No title", max_length=250)),
                (
                    "first_node",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="head_info",
                        to="stories.storynode",
                    ),
                ),
                ("tags", models.ManyToManyField(to="stories.tag")),
            ],
        ),
    ]
